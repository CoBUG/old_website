xmerl_scan(3)              Erlang Module Definition              xmerl_scan(3)



NNAAMMEE
       xmerl_scan - This module is the interface to the XML parser, it handles
       XML 1.0.

DDEESSCCRRIIPPTTIIOONN
       This module is the interface to the XML parser, it handles XML 1.0. The
       XML parser is activated through _x_m_e_r_l___s_c_a_n_:_s_t_r_i_n_g_/_[_1_,_2_] or
       _x_m_e_r_l___s_c_a_n_:_f_i_l_e_/_[_1_,_2_]. It returns records of the type defined in
       xmerl.hrl. See also tutorial on customization functions.

DDAATTAA TTYYPPEESS
         _d_o_c_u_m_e_n_t_(_) _= _x_m_l_E_l_e_m_e_n_t_(_) _| _x_m_l_D_o_c_u_m_e_n_t_(_):


           The document returned by _x_m_e_r_l___s_c_a_n_:_s_t_r_i_n_g_/_[_1_,_2_] and
           _x_m_e_r_l___s_c_a_n_:_f_i_l_e_/_[_1_,_2_]. The type of the returned record depends on
           the value of the document option passed to the function.

         _g_l_o_b_a_l___s_t_a_t_e_(_):


           The global state of the scanner, represented by the
           #xmerl_scanner{} record.

         _o_p_t_i_o_n___l_i_s_t_(_):


           Options allow to customize the behaviour of the scanner. See also
           tutorial on customization functions.

           Possible options are:

           _{_a_c_c___f_u_n_, _F_u_n_}:
             Call back function to accumulate contents of entity.

           _{_c_o_n_t_i_n_u_a_t_i_o_n___f_u_n_, _F_u_n_} _| _{_c_o_n_t_i_n_u_a_t_i_o_n___f_u_n_, _F_u_n_,
           _C_o_n_t_i_n_u_a_t_i_o_n_S_t_a_t_e_}:
             Call back function to decide what to do if the scanner runs into
             EOF before the document is complete.

           _{_e_v_e_n_t___f_u_n_, _F_u_n_} _| _{_e_v_e_n_t___f_u_n_, _F_u_n_, _E_v_e_n_t_S_t_a_t_e_}:
             Call back function to handle scanner events.

           _{_f_e_t_c_h___f_u_n_, _F_u_n_} _| _{_f_e_t_c_h___f_u_n_, _F_u_n_, _F_e_t_c_h_S_t_a_t_e_}:
             Call back function to fetch an external resource.

           _{_h_o_o_k___f_u_n_, _F_u_n_} _| _{_h_o_o_k___f_u_n_, _F_u_n_, _H_o_o_k_S_t_a_t_e_}:
             Call back function to process the document entities once
             identified.

           _{_c_l_o_s_e___f_u_n_, _F_u_n_}:
             Called when document has been completely parsed.

           _{_r_u_l_e_s_, _R_e_a_d_F_u_n_, _W_r_i_t_e_F_u_n_, _R_u_l_e_s_S_t_a_t_e_} _| _{_r_u_l_e_s_, _R_u_l_e_s_}:
             Handles storing of scanner information when parsing.

           _{_u_s_e_r___s_t_a_t_e_, _U_s_e_r_S_t_a_t_e_}:
             Global state variable accessible from all customization functions

           _{_f_e_t_c_h___p_a_t_h_, _P_a_t_h_L_i_s_t_}:
             PathList is a list of directories to search when fetching files.
             If the file in question is not in the fetch_path, the URI will be
             used as a file name.

           _{_s_p_a_c_e_, _F_l_a_g_}:
             'preserve' (default) to preserve spaces, 'normalize' to
             accumulate consecutive whitespace and replace it with one space.

           _{_l_i_n_e_, _L_i_n_e_}:
             To specify starting line for scanning in document which contains
             fragments of XML.

           _{_n_a_m_e_s_p_a_c_e___c_o_n_f_o_r_m_a_n_t_, _F_l_a_g_}:
             Controls whether to behave as a namespace conformant XML parser,
             'false' (default) to not otherwise 'true'.

           _{_v_a_l_i_d_a_t_i_o_n_, _F_l_a_g_}:
             Controls whether to process as a validating XML parser: 'off'
             (default) no validation, or validation 'dtd' by DTD or 'schema'
             by XML Schema. 'false' and 'true' options are obsolete (i.e. they
             may be removed in a future release), if used 'false' equals 'off'
             and 'true' equals 'dtd'.

           _{_s_c_h_e_m_a_L_o_c_a_t_i_o_n_, _[_{_N_a_m_e_s_p_a_c_e_,_L_i_n_k_}_|_._._._]_}:
             Tells explicitly which XML Schema documents to use to validate
             the XML document. Used together with the _{_v_a_l_i_d_a_t_i_o_n_,_s_c_h_e_m_a_}
             option.

           _{_q_u_i_e_t_, _F_l_a_g_}:
             Set to 'true' if xmerl should behave quietly and not output any
             information to standard output (default 'false').

           _{_d_o_c_t_y_p_e___D_T_D_, _D_T_D_}:
             Allows to specify DTD name when it isn't available in the XML
             document. This option has effect only together with
             _{_v_a_l_i_d_a_t_i_o_n_,_'_d_t_d_' option.

           _{_x_m_l_b_a_s_e_, _D_i_r_}:
             XML Base directory. If using string/1 default is current
             directory. If using file/1 default is directory of given file.

           _{_e_n_c_o_d_i_n_g_, _E_n_c_}:
             Set default character set used (default UTF-8). This character
             set is used only if not explicitly given by the XML declaration.

           _{_d_o_c_u_m_e_n_t_, _F_l_a_g_}:
             Set to 'true' if xmerl should return a complete XML document as
             an xmlDocument record (default 'false').

           _{_c_o_m_m_e_n_t_s_, _F_l_a_g_}:
             Set to 'false' if xmerl should skip comments otherwise they will
             be returned as xmlComment records (default 'true').

           _{_d_e_f_a_u_l_t___a_t_t_r_s_, _F_l_a_g_}:
             Set to 'true' if xmerl should add to elements missing attributes
             with a defined default value (default 'false').

EEXXPPOORRTTSS
       aaccccuummuullaattee__wwhhiitteessppaaccee((TT::::ssttrriinngg(()),, SS::::gglloobbaall__ssttaattee(()),, XX33::::aattoomm(()),,
       AAcccc::::ssttrriinngg(()))) -->> {{AAcccc,, TT11,, SS11}}

              Function to accumulate and normalize whitespace.

       ccoonntt__ssttaattee((SS::::gglloobbaall__ssttaattee(()))) -->> gglloobbaall__ssttaattee(())

              Equivalent to ccoonntt__ssttaattee((CCoonnttiinnuuaattiioonnSSttaattee,, SS)).

       ccoonntt__ssttaattee((XX::::CCoonnttiinnuuaattiioonnSSttaattee,, SS::::gglloobbaall__ssttaattee(()))) -->> gglloobbaall__ssttaattee(())

              For controlling the ContinuationState, to be used in a
              continuation function, and called when the parser encounters the
              end of the byte stream. See tutorial on customization functions.

       eevveenntt__ssttaattee((SS::::gglloobbaall__ssttaattee(()))) -->> gglloobbaall__ssttaattee(())

              Equivalent to eevveenntt__ssttaattee((EEvveennttSSttaattee,, SS)).

       eevveenntt__ssttaattee((XX::::EEvveennttSSttaattee,, SS::::gglloobbaall__ssttaattee(()))) -->> gglloobbaall__ssttaattee(())

              For controlling the EventState, to be used in an event function,
              and called at the beginning and at the end of a parsed entity.
              See tutorial on customization functions.

       ffeettcchh__ssttaattee((SS::::gglloobbaall__ssttaattee(()))) -->> gglloobbaall__ssttaattee(())

              Equivalent to ffeettcchh__ssttaattee((FFeettcchhSSttaattee,, SS)).

       ffeettcchh__ssttaattee((XX::::FFeettcchhSSttaattee,, SS::::gglloobbaall__ssttaattee(()))) -->> gglloobbaall__ssttaattee(())

              For controlling the FetchState, to be used in a fetch function,
              and called when the parser fetch an external resource (eg. a
              DTD). See tutorial on customization functions.

       ffiillee((FFiilleennaammee::::ssttrriinngg(()))) -->> {{xxmmllEElleemmeenntt(()),, RReesstt}}

              Types:

                 Rest = list()

              Equivalent to ffiillee((FFiilleennaammee,, [[]])).

       ffiillee((FFiilleennaammee::::ssttrriinngg(()),, OOppttiioonnss::::ooppttiioonn__lliisstt(()))) -->> {{ddooccuummeenntt(()),, RReesstt}}

              Types:

                 Rest = list()

              Parse file containing an XML document

       hhooookk__ssttaattee((SS::::gglloobbaall__ssttaattee(()))) -->> gglloobbaall__ssttaattee(())

              Equivalent to hhooookk__ssttaattee((HHooookkSSttaattee,, SS)).

       hhooookk__ssttaattee((XX::::HHooookkSSttaattee,, SS::::gglloobbaall__ssttaattee(()))) -->> gglloobbaall__ssttaattee(())

              For controlling the HookState, to be used in a hook function,
              and called when the parser has parsed a complete entity. See
              tutorial on customization functions.

       rruulleess__ssttaattee((SS::::gglloobbaall__ssttaattee(()))) -->> gglloobbaall__ssttaattee(())

              Equivalent to rruulleess__ssttaattee((RRuulleessSSttaattee,, SS)).

       rruulleess__ssttaattee((XX::::RRuulleessSSttaattee,, SS::::gglloobbaall__ssttaattee(()))) -->> gglloobbaall__ssttaattee(())

              For controlling the RulesState, to be used in a rules function,
              and called when the parser store scanner information in a rules
              database. See tutorial on customization functions.

       ssttrriinngg((TTeexxtt::::lliisstt(()))) -->> {{xxmmllEElleemmeenntt(()),, RReesstt}}

              Types:

                 Rest = list()

              Equivalent to ssttrriinngg((TTeesstt,, [[]])).

       ssttrriinngg((TTeexxtt::::lliisstt(()),, OOppttiioonnss::::ooppttiioonn__lliisstt(()))) -->> {{ddooccuummeenntt(()),, RReesstt}}

              Types:

                 Rest = list()

              Parse string containing an XML document

       uusseerr__ssttaattee((SS::::gglloobbaall__ssttaattee(()))) -->> gglloobbaall__ssttaattee(())

              Equivalent to uusseerr__ssttaattee((UUsseerrSSttaattee,, SS)).

       uusseerr__ssttaattee((XX::::UUsseerrSSttaattee,, SS::::gglloobbaall__ssttaattee(()))) -->> gglloobbaall__ssttaattee(())

              For controlling the UserState, to be used in a user function.
              See tutorial on customization functions.

AAUUTTHHOORRSS
       _<_>



                                  xmerl 1.3.2                    xmerl_scan(3)
