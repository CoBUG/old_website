CosEventChannelAdmin(3)    Erlang Module Definition    CosEventChannelAdmin(3)



NNAAMMEE
       CosEventChannelAdmin - The CosEventChannelAdmin defines a set if event
       service interfaces that  enables decoupled asynchronous communication
       between objects and implements generic (untyped) version of the OMG
       COSS standard event service.

DDEESSCCRRIIPPTTIIOONN
       The event service defines two roles for objects: the supplier role and
       the consumer role. Suppliers supply event data to the event channel and
       consumers receive event data from the channel. Suppliers do not need to
       know the identity of the consumers, and vice versa. Consumers and
       suppliers are connected to the event channel via proxies, which are
       managed by ConsumerAdmin and SupplierAdmin objects.

       There are four general models of communication. These are:

         * The canonical push model. It allows the suppliers of events to
           initiate the transfer of event data to consumers. Event channels
           play the role of _N_o_t_i_f_i_e_r. Active suppliers use event channel to
           push data to passive consumers registered with the event channel.

         * The canonical pull model. It allows consumers to request events
           from suppliers. Event channels play the role of _P_r_o_c_u_r_e since they
           procure events on behalf of consumers. Active consumers can
           explicitly pull data from passive suppliers via the event channels.

         * The hybrid push/pull model. It allows consumers request events
           queued at a channel by suppliers. Event channels play the role of
           _Q_u_e_u_e. Active consumers explicitly pull data deposited by active
           suppliers via the event channels.

         * The hybrid pull/push model. It allows the channel to pull events
           from suppliers and push them to consumers. Event channels play the
           role of _I_n_t_e_l_l_i_g_e_n_t _a_g_e_n_t. Active event channels can pull data from
           passive suppliers to push it to passive consumers.

       To get access to all definitions, e.g., exceptions, include necessary
       _h_r_l files by using:
       _-_i_n_c_l_u_d_e___l_i_b_(_"_c_o_s_E_v_e_n_t_/_i_n_c_l_u_d_e_/_*_._h_r_l_"_)_.

       There are seven different interfaces supported in the service:

         * ProxyPushConsumer

         * ProxyPullSupplier

         * ProxyPullConsumer

         * ProxyPushSupplier

         * ConsumerAdmin

         * SupplierAdmin

         * EventChannel

Ericsson AB                     cosEvent 2.1.12        CosEventChannelAdmin(3)
