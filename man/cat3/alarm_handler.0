alarm_handler(3)           Erlang Module Definition           alarm_handler(3)



NNAAMMEE
       alarm_handler - An Alarm Handling Process

DDEESSCCRRIIPPTTIIOONN
       The alarm handler process is a _g_e_n___e_v_e_n_t event manager process which
       receives alarms in the system. This process is not intended to be a
       complete alarm handler. It defines a place to which alarms can be sent.
       One simple event handler is installed in the alarm handler at start-up,
       but users are encouraged to write and install their own handlers.

       The simple event handler sends all alarms as info reports to the error
       logger, and saves all of them in a list which can be passed to a user
       defined event handler, which may be installed at a later stage. The
       list can grow large if many alarms are generated. So it is a good
       reason to install a better user defined handler.

       There are functions to set and clear alarms. The format of alarms are
       defined by the user. For example, an event handler for SNMP could be
       defined, together with an alarm MIB.

       The alarm handler is part of the SASL application.

       When writing new event handlers for the alarm handler, the following
       events must be handled:

         _{_s_e_t___a_l_a_r_m_, _{_A_l_a_r_m_I_d_, _A_l_a_r_m_D_e_s_c_r_}_}:
           This event is generated by _a_l_a_r_m___h_a_n_d_l_e_r_:_s_e_t___a_l_a_r_m_(_{_A_l_a_r_m_I_d_,
           _A_l_a_r_m_D_e_c_s_r_}_).

         _{_c_l_e_a_r___a_l_a_r_m_, _A_l_a_r_m_I_d_}:
           This event is generated by _a_l_a_r_m___h_a_n_d_l_e_r_:_c_l_e_a_r___a_l_a_r_m_(_A_l_a_r_m_I_d_).

       The default simple handler is called _a_l_a_r_m___h_a_n_d_l_e_r and it may be
       exchanged by calling _g_e_n___e_v_e_n_t_:_s_w_a_p___h_a_n_d_l_e_r_/_3 as
       _g_e_n___e_v_e_n_t_:_s_w_a_p___h_a_n_d_l_e_r_(_a_l_a_r_m___h_a_n_d_l_e_r_, _{_a_l_a_r_m___h_a_n_d_l_e_r_, _s_w_a_p_}_,
       _{_N_e_w_H_a_n_d_l_e_r_, _A_r_g_s_}_). _N_e_w_H_a_n_d_l_e_r_:_i_n_i_t_(_{_A_r_g_s_, _{_a_l_a_r_m___h_a_n_d_l_e_r_, _A_l_a_r_m_s_}_}_)
       is called. Refer to gen_event(3) for further details.

EEXXPPOORRTTSS
       cclleeaarr__aallaarrmm((AAllaarrmmIIdd)) -->> vvooiidd(())

              Types:

                 AlarmId = term()

              Clears all alarms with id _A_l_a_r_m_I_d.

       ggeett__aallaarrmmss(()) -->> [[aallaarrmm(())]]

              Returns a list of all active alarms. This function can only be
              used when the simple handler is installed.

       sseett__aallaarrmm((aallaarrmm(())))

              Types:

                 alarm() = {AlarmId, AlarmDescription}
                 AlarmId = term()
                 AlarmDescription = term()

              Sets an alarm with id _A_l_a_r_m_I_d. This id is used at a later stage
              when the alarm is cleared.

SSEEEE AALLSSOO
       error_logger(3), gen_event(3)



Ericsson AB                       sasl 2.2.1                  alarm_handler(3)
